name: Node Continuous Deployment

on:
    push:
        branches: [ main ]

permissions:
    id-token: write
    contents: read

jobs:
    build:
          runs-on: ubuntu-latest
          strategy:
            matrix:
              node-version: [20.x]
      
          steps:
          - uses: actions/checkout@v4
          
          - name: Cache node modules
            uses: actions/cache@v4
            with:
              path: ~/.npm
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                ${{ runner.os }}-node-
      
          - name: Node ${{ matrix.node-version }}
            uses: actions/setup-node@v4
            with:
              node-version: ${{ matrix.node-version }}
      
          - name: npm install
            run: npm ci

          - name: Check code
            run: npm run lint
      
          - name: Generate deployment package
            run: |
              mkdir security/
              cd security
              touch cert.key
              touch cert.crt
              echo "${{ secrets.SSL_KEY }}" > cert.key
              echo "${{ secrets.SSL_CERT }}" > cert.crt
              zip -r deploy.zip * -x "**node_modules**"
      
          - name: Get timestamp
            uses: gerred/actions/current-time@master
            id: current-time
      
          - name: Run string replace
            uses: frabert/replace-string-action@master
            id: format-time
            with:
              pattern: '[:\.]+'
              string: "${{ steps.current-time.outputs.time }}"
              replace-with: '-'
              flags: 'g'
      
          - name: Beanstalk Deploy for app
            uses: einaregilsson/beanstalk-deploy@v22
            with:
              aws_access_key: ${{secrets.ACCESS_KEY}}
              aws_secret_key: ${{secrets.SECRET_ACCESS_KEY}}
              application_name: SpiderSightings-App
              environment_name: SpiderSightings-App-env
              region: eu-west-1
              version_label: "version1-${{ steps.current-time.outputs.time }}"
              deployment_package: deploy.zip
